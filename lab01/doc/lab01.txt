Соколов Г.Б.
гр. Е-Н1123а
Лабораторна робота №1
Тема: Вступ до програмування. Освоєння командної строки LinuxМета
1. Завантажено та інстальовано додаток VirtualBox. 
2. Встановлена віртуальна операційну систему Debian GNU/Linux 12 (bookworm). За допомогою терміналу оновлени компоненти системи до актуальних. Для цього в командій строці введено наступні команди:
 – sudo apt-get update;
– sudo apt-get upgrade;
– sudo reboot;
3. Інстальовано програмні додатки: git, gcc, clang, clang-format, clang-tidy, tree, make, check, cppcheck, valgrind, llvm.
Для інсталяції кожного додатку в командій строці введено команду: sudo apt install “назва додатку” 
4. З віддаленого репозіторію з github за посиланням https://github.com/davydov-vyacheslav/sample_project знайдено проект.
За допомогою терміналу і команді git clone виконано клонування данного проекту в задану директорію на комп’ютері.
5. В командної строці для директорії з проектом вводимо команду tree. Яка виводить на екран структуру каталогів.
6. Знаходимо директорії проекту з файлом Makefile. Перевіряемо наявність файлу. Для цього в терміналі вводимо команду ls, на екрані бачимо перелік файлів каталогу, в тому числі і Makefile.
sokolov@debian:~/Документы/Git/sample_project/lab00$ ls 
CMakeLists.txt doc Doxyfile Makefile README.md src
Вводимо к терміналі make clean prep compile check, а потім команду tree
├── CMakeLists.txt 
├── dist 
│   └── main.bin 
├── doc 
│   ├── assets 
│   │   └── animal-fields.png 
│   ├── lab00.docx 
│   ├── lab00.md 
│   └── lab00.pdf 
├── Doxyfile 
├── Makefile 
├── README.md 
└── src 
   ├── lib.c 
   ├── lib.h 
   └── main.c
З каталогу dist запускаємо бінарний файл main.bin
sokolov@debian:~/Документы/Git/sample_project/lab00$ cd dist 
sokolov@debian:~/Документы/Git/sample_project/lab00/dist$ ./main.bin 
Інформація про тварину №01: Собака: зріст = 4 см, маса = 89 гр.  
Інформація про тварину №02: Свиня: зріст = 9 см, маса = 7 гр.  
Інформація про тварину №03: Собака: зріст = 49 см, маса = 90 гр.  
Інформація про тварину №04: Кіт: зріст = 59 см, маса = 89 гр.  
Інформація про тварину №05: Кіт: зріст = 63 см, маса = 26 гр.  
Інформація про тварину №06: Собака: зріст = 87 см, маса = 37 гр.  
Інформація про тварину №07: Собака: зріст = 23 см, маса = 9 гр.  
Інформація про тварину №08: Кіт: зріст = 59 см, маса = 124 гр.  
Інформація про тварину №09: Корова: зріст = 66 см, маса = 113 гр.  
Інформація про тварину №10: Свиня: зріст = 16 см, маса = 107 гр.

7. Робимо заміну в коді. Тип об’екту Свиня замінюємо на Людина.
{
	const char *result;
	switch (type) {
	case CAT:
		result = "Кіт";
		break;
	case DOG:
		result = "Собака";
		break;
	case COW:
		result = "Корова";
		break;
	case MAN:
		result = "Людина";
		break;
	default:
		result = "N/A";

	}
enum animal_type {
	MAN, /**< Людина */
	COW, /**< Корова */
	DOG, /**< Собака */
	CAT, /**< Кіт */
	ANIMAL_TYPE_COUNT /**< Кількість тварин */
};
8. Перекомпілюємо проект командою make clean prep compile check в терміналі, та запустимо бінарний файл main.bin
sokolov@debian:~/Документы/Git/sample_project/lab00/dist$  ./main.bin
Інформація про тварину №01: Собака: зріст = 25 см, маса = 80 гр.  
Інформація про тварину №02: Корова: зріст = 87 см, маса = 30 гр.  
Інформація про тварину №03: Собака: зріст = 47 см, маса = 117 гр.  
Інформація про тварину №04: Собака: зріст = 57 см, маса = 87 гр.  
Інформація про тварину №05: Людина: зріст = 85 см, маса = 47 гр.  
Інформація про тварину №06: Корова: зріст = 79 см, маса = 114 гр.  
Інформація про тварину №07: Людина: зріст = 34 см, маса = 29 гр.  
Інформація про тварину №08: Кіт: зріст = 106 см, маса = 81 гр.  
Інформація про тварину №09: Кіт: зріст = 36 см, маса = 96 гр.  
Інформація про тварину №10: Кіт: зріст = 26 см, маса = 47 гр.  

9. В файлі Makefile додаем ціль all для виконання clean prep compile check
Командою make all в терміналі перевіряєм роботу
sokolov@debian:~/Документы/Git/sample_project/lab00$ make all 
rm -rf dist 
mkdir dist clang  -std=gnu11 -g -Wall -Wextra -Werror -Wformat-security -Wfloat-equal -Wshadow -Wconversion -Wlogical-not-parentheses -Wnull-dereference -Wno-unused-variable -Wno-implicit-int-float-conversion -Werror=vla -I./src src/lib.c src/main.c -o ./dist/main.bin
./dist/main.bin
Інформація про тварину №01: Собака: зріст = 59 см, маса = 85 гр.  
Інформація про тварину №02: Кіт: зріст = 37 см, маса = 59 гр.  
Інформація про тварину №03: Собака: зріст = 9 см, маса = 119 гр.  
Інформація про тварину №04: Собака: зріст = 10 см, маса = 95 гр.  
Інформація про тварину №05: Людина: зріст = 60 см, маса = 66 гр.  
Інформація про тварину №06: Корова: зріст = 67 см, маса = 104 гр.  
Інформація про тварину №07: Людина: зріст = 61 см, маса = 25 гр.  
Інформація про тварину №08: Собака: зріст = 120 см, маса = 31 гр.  
Інформація про тварину №09: Кіт: зріст = 29 см, маса = 12 гр.  
Інформація про тварину №10: Людина: зріст = 84 см, маса = 36 гр.

10. Для визначення поточної версії clang та make в командної строці вводимо команди clang –version, та make –version відповідно
sokolov@debian:~$ clang –version
Debian clang version 14.0.6 
Target: x86_64-pc-linux-gnu 
Thread model: posix 
InstalledDir: /usr/bin
sokolov@debian:~$ make --version 
GNU Make 4.3 
Эта программа собрана для x86_64-pc-linux-gnu
Copyright (C) 1988-2020 Free Software Foundation, Inc.
Лицензия GPLv3+: GNU GPL версии 3 или новее http://gnu.org/licenses/gpl.html

11. Робота утиліти man та її призначення
man – це пейджер довідкових сторінок сістеми. Кожен параметр сторінка, переданий man зазвичай є назвою програми, утиліти або функції. По кожному з цих параметрів виконується пошук та виведення пов'язаної з ним довідкової сторінки. Якщо вказано параметр розділу, це змушує man виконувати пошук лише у цьому довідковому розділі. За замовчуванням є пошук у всіх доступних розділах в заздалегідь визначеному порядку.

У таблиці нижче показано номери довідкових розділів та опис їхнього вмісту.
1 Виконувані програми або команди оболонки (shell)
2 Системні виклики (функції, що надаються ядром)
3 Бібліотечні дзвінки (функції, що надаються програмними бібліотеками)
4 Спеціальні файли (які зазвичай знаходяться в каталозі /dev)
5 Формати файлів та угоди, наприклад /etc/passwd
6 Ігри
7 Різне (включає пакети макросів та угоди), наприклад man (7), groff (7)
8 Команди адміністрування системи (зазвичай, що запускаються лише суперкористувачем)
9 Процедури ядра [нестандартний розділ]
Довідкова сторінка складається з кількох розділів.
Пошук у man-сторінці викликається за допомогою клавіші “/”, кожне наступне знайдене входження можна переглянути за допомогою клавіші “n”. Не знаючи точну назву man-сторінки, можна скористатися apropos(1).
man найчастіше використовується без будь-яких опцій [option(s)] і має лише одне ключове слово (keyword). Ключове слово – це точне ім'я команди або іншого елемента, який потребує інформації.
Кожна сторінка керівництва є самостійною статтею, яка поділяється на кілька розділів, заголовки для яких позначені літерами верхнього регістру. Секції для команд, як правило, схожі на NAME, SYNOPSIS, DESCRIPTION, OPTIONS, AUTHOR, BUGS, COPYRIGHT, HISTORY та SEE ALSO. Деякі з них можуть бути розбиті на підрозділи, зокрема OPTIONS, у разі команди з безліччю опцій.

12. 
sokolov@debian:~/Документы/Git/sample_project$  git diff
diff --git a/lab-cpp00/Makefile b/lab-cpp00/Makefile
diff --git a/lab-cpp00/Makefile b/lab-cpp00/Makefile
index 6a5d266..b4014b6 100644
--- a/lab-cpp00/Makefile
+++ b/lab-cpp00/Makefile
@@ -4,7 +4,7 @@
 CC = $(CLANG_PREFIX)clang++
 LAB_OPTS = -I./src src/lib.cpp
 C_OPTS = $(MAC_OPTS) -fsanitize=address -std=c++11 -g -Wall -Wextra -Werror -Wformat-security -Wfloat-equal -Wshadow -Wconversion -Wlogical-not-parentheses -Wnull-dereference -Wno-unused-variable -Werror=vla $(LAB_OPTS)
-
+all: clean prep compile check
 clean:
        rm -rf dist
 prep:
diff --git a/lab00/CMakeLists.txt b/lab00/CMakeLists.txt
old mode 100644
new mode 100755
diff --git a/lab00/Doxyfile b/lab00/Doxyfile
old mode 100644
new mode 100755
diff --git a/lab00/Makefile b/lab00/Makefile
index aedfa28..3853991 100644
--- a/lab00/Makefile
+++ b/lab00/Makefile
@@ -2,6 +2,8 @@ CC = clang
 LAB_OPTS = -I./src src/lib.c
 C_OPTS = $(MAC_OPTS) -std=gnu11 -g -Wall -Wextra -Werror -Wformat-security -Wfloat-equal -Wshadow -Wconversion -Wlogical-not-parentheses -Wnull-dereference -Wno-unused-variable -Wno-implicit-int-float-conversion -Werror=vla $(LAB_OPTS)
 
+all: clean prep compile run
+
 clean:
        rm -rf dist
 prep:
diff --git a/lab00/README.md b/lab00/README.md
old mode 100644
new mode 100755
diff --git a/lab00/doc/assets/animal-fields.png b/lab00/doc/assets/animal-fields.png
old mode 100644
new mode 100755
diff --git a/lab00/doc/lab00.docx b/lab00/doc/lab00.docx
old mode 100644
new mode 100755
diff --git a/lab00/doc/lab00.md b/lab00/doc/lab00.md
old mode 100644
new mode 100755
diff --git a/lab00/doc/lab00.pdf b/lab00/doc/lab00.pdf
old mode 100644
new mode 100755
diff --git a/lab00/src/lib.c b/lab00/src/lib.c
old mode 100644
new mode 100755
index f7f86e0..d64a0c1
--- a/lab00/src/lib.c
+++ b/lab00/src/lib.c
@@ -22,8 +22,8 @@ const char *get_animal_type_name(enum animal_type type)
        case COW:
                result = "Корова";
                break;
-       case PIG:
-               result = "Свиня";
+       case MAN:
+               result = "Людина";
                break;
        default:
                result = "N/A";
diff --git a/lab00/src/lib.h b/lab00/src/lib.h
old mode 100644
new mode 100755
index 0fe857b..9b00657
--- a/lab00/src/lib.h
+++ b/lab00/src/lib.h
@@ -25,7 +25,7 @@
  * Тип тварини
  */
 enum animal_type {
-       PIG, /**< Свиня */
+       MAN, /**< Людина */
        COW, /**< Корова */
        DOG, /**< Собака */
        CAT, /**< Кіт */
diff --git a/lab00/src/main.c b/lab00/src/main.c
old mode 100644
new mode 100755
(END)
